/**
 * Swagger uploadflag
 * This is the YoonMVP API server.  You can find  out more about Swagger at  [http://swagger.io](http://swagger.io) or on  [irc.freenode.net, #swagger](http://swagger.io/irc/). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: administration@yoon.online
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.0.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SwaggerUploadflag) {
      root.SwaggerUploadflag = {};
    }
    root.SwaggerUploadflag.Claim = factory(root.SwaggerUploadflag.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Claim model module.
   * @module model/Claim
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Claim</code>.
   * @alias module:model/Claim
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>Claim</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Claim} obj Optional instance to populate.
   * @return {module:model/Claim} The populated <code>Claim</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('uploadId')) {
        obj['uploadId'] = ApiClient.convertToType(data['uploadId'], 'Number');
      }
      if (data.hasOwnProperty('quantity')) {
        obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
      }
      if (data.hasOwnProperty('shipDate')) {
        obj['shipDate'] = ApiClient.convertToType(data['shipDate'], 'Date');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('complete')) {
        obj['complete'] = ApiClient.convertToType(data['complete'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Number} uploadId
   */
  exports.prototype['uploadId'] = undefined;
  /**
   * @member {Number} quantity
   */
  exports.prototype['quantity'] = undefined;
  /**
   * @member {Date} shipDate
   */
  exports.prototype['shipDate'] = undefined;
  /**
   * claim Status
   * @member {module:model/Claim.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {Boolean} complete
   * @default false
   */
  exports.prototype['complete'] = false;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "placed"
     * @const
     */
    "placed": "placed",
    /**
     * value: "approved"
     * @const
     */
    "approved": "approved",
    /**
     * value: "delivered"
     * @const
     */
    "delivered": "delivered"  };


  return exports;
}));


